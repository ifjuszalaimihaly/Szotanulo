/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package szotanulo;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;
import javax.swing.JLabel;

/**
 *
 * @author Mihály
 */
public class Szotanulo extends javax.swing.JFrame implements KeyListener {

    /**
     * Creates new form Szavak
     */
    public Szotanulo() {
        indit();
        initComponents();
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {

        }
        magyarText.addKeyListener(this);
        angolText.addKeyListener(this);
        magyarText.setEnabled(false);
        angolText.setEnabled(false);
        bevitelGomb.setEnabled(false);
        tanulasGomb.setEnabled(false);
        valaszSzoText.setEnabled(false);
        ellenorzoGomb2.setEnabled(false);
        torlesGomb.setEnabled(false);
        this.setVisible(true);
        this.setResizable(false);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ellenorzoGomb = new javax.swing.JButton();
        angolLabel = new javax.swing.JLabel();
        magyarLabel = new javax.swing.JLabel();
        angolText = new javax.swing.JTextField();
        magyarText = new javax.swing.JTextField();
        bevitelGomb = new javax.swing.JButton();
        uresFelirat = new javax.swing.JLabel();
        tanulasGomb = new javax.swing.JButton();
        valaszSzoText = new javax.swing.JTextField();
        kerdezettSzoLabel = new javax.swing.JLabel();
        talalatLabel = new javax.swing.JLabel();
        tanulandoText = new javax.swing.JLabel();
        fajlNevGomb = new javax.swing.JButton();
        fajlNevText = new javax.swing.JTextField();
        torlesGomb = new javax.swing.JButton();
        ellenorzoGomb2 = new javax.swing.JButton();

        ellenorzoGomb.setText("Ellenőriz");
        ellenorzoGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ellenorzoGombActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        angolLabel.setText("Angol");

        magyarLabel.setText("Magyar");

        bevitelGomb.setText("Új szó");
        bevitelGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bevitelGombActionPerformed(evt);
            }
        });

        tanulasGomb.setText("Tanulás");
        tanulasGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tanulasGombActionPerformed(evt);
            }
        });

        valaszSzoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valaszSzoTextActionPerformed(evt);
            }
        });

        fajlNevGomb.setText("A fájl neve:");
        fajlNevGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fajlNevGombActionPerformed(evt);
            }
        });

        torlesGomb.setText("Törlés");
        torlesGomb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                torlesGombActionPerformed(evt);
            }
        });

        ellenorzoGomb2.setText("Ellenőriz");
        ellenorzoGomb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ellenorzoGomb2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tanulandoText, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(talalatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(uresFelirat, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(angolLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(angolText)
                                            .addComponent(tanulasGomb, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(magyarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(magyarText, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(45, 45, 45)
                                                .addComponent(kerdezettSzoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(valaszSzoText, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bevitelGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fajlNevGomb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(ellenorzoGomb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(torlesGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)))
                        .addGap(18, 18, 18)
                        .addComponent(fajlNevText, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(angolLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(magyarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(angolText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bevitelGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(magyarText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fajlNevGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fajlNevText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(uresFelirat, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(torlesGomb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(kerdezettSzoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tanulasGomb, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(valaszSzoText)
                        .addComponent(ellenorzoGomb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(talalatLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(tanulandoText, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bevitelGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bevitelGombActionPerformed
        if (angolText.getText().length() != 0 && magyarText.getText().length() != 0) {
            SzoPar szopar = new SzoPar(angolText.getText().trim(), magyarText.getText().trim());
            bevitelEllenorzes(szopar);
            Fajlkezelo.kiir();
            uresFelirat.setText("");
            angolText.setText("");
            magyarText.setText("");
        } else {
            uresFelirat.setText("Töltsd ki a mezőket");
        }


    }//GEN-LAST:event_bevitelGombActionPerformed

    private void tanulasGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tanulasGombActionPerformed
        magyarText.setEnabled(false);
        angolText.setEnabled(false);
        bevitelGomb.setEnabled(false);
        torlesGomb.setEnabled(false);
        valaszSzoText.setEnabled(true);
        ellenorzoGomb2.setEnabled(true);
        valaszSzoText.addKeyListener(this);
        ujSzotKerdez();
        tanulasGomb.setEnabled(false);
    }//GEN-LAST:event_tanulasGombActionPerformed

    private void valaszSzoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valaszSzoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valaszSzoTextActionPerformed

    private void ellenorzoGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ellenorzoGombActionPerformed
       
    }//GEN-LAST:event_ellenorzoGombActionPerformed

    private void fajlNevGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fajlNevGombActionPerformed
        if (fajlNevText.getText().length() != 0) {
            Fajlkezelo.setFajlnev(fajlNevText.getText());
            fajlNevGomb.setEnabled(false);
            fajlNevText.setEnabled(false);
            bevitelGomb.setEnabled(true);
            torlesGomb.setEnabled(true);
            tanulasGomb.setEnabled(true);
            magyarText.setEnabled(true);
            angolText.setEnabled(true);
            Fajlkezelo.beolvas();
        }
    }//GEN-LAST:event_fajlNevGombActionPerformed

    private void torlesGombActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_torlesGombActionPerformed
        if (magyarText.getText().length() != 0 && angolText.getText().length() != 0) {
            SzoPar sz = new SzoPar(angolText.getText(), magyarText.getText());
            for (SzoPar s : Main.getSzavak()) {
                if (s.equals(sz)) {
                    Main.getSzavak().remove(s);
                }
            }
            Fajlkezelo.kiir();
        }
    }//GEN-LAST:event_torlesGombActionPerformed

    private void ellenorzoGomb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ellenorzoGomb2ActionPerformed
         SzoPar sz = new SzoPar();
        if (nyelv) {
            sz.setAngol(kerdezettSzoLabel.getText());
            sz.setMagyar(valaszSzoText.getText());
        } else {
            sz.setAngol(valaszSzoText.getText());
            sz.setMagyar(kerdezettSzoLabel.getText());
        }
        kerdezettSzoLabel.setText("");
        if (sz.equals(Main.getSzavak().get(keresettSzoIndexe))) {
            talalatLabel.setForeground(Color.BLACK);
            talalatLabel.setText("Ezt már tudod, ügyes vagy");
            Main.getSzavak().remove(keresettSzoIndexe);
            ujSzotKerdez();
        } else {
            talalatLabel.setForeground(Color.red);
            if (nyelv) {
                talalatLabel.setText("Ezt még gyakorolni kell, a helyes válasz: " + Main.getSzavak().get(keresettSzoIndexe).getAngol() + " - " + Main.getSzavak().get(keresettSzoIndexe).getMagyar());
            } else {
                talalatLabel.setText("Ezt még gyakorolni kell, a helyes válasz: " + Main.getSzavak().get(keresettSzoIndexe).getMagyar() + " - " + Main.getSzavak().get(keresettSzoIndexe).getAngol());
            }
            ujSzotKerdez();
        }
        valaszSzoText.setText("");
    }//GEN-LAST:event_ellenorzoGomb2ActionPerformed
    public void bevitelEllenorzes(SzoPar szopar) {
        boolean benneVan = false;
        for (SzoPar s : Main.getSzavak()) {
            if (s.getAngol().equals(szopar.getAngol()) && s.getMagyar().equals(szopar.getMagyar())) {
                benneVan = true;
            }
        }
        if (!benneVan) {
            Main.getSzavak().add(szopar);
        }
    }

    private void ujSzotKerdez() {
        Random r = new Random();
        nyelv = r.nextBoolean();
        int elozoszoindexe = keresettSzoIndexe;

        if (!Main.getSzavak().isEmpty()) {
            int i = 0;
          //  while (elozoszoindexe == i && Main.getSzavak().size() >= 1) {
                i = r.nextInt(Main.getSzavak().size());
          //  }
            if (nyelv) {
                kerdezettSzoLabel.setText(Main.getSzavak().get(i).getAngol());
            } else {
                kerdezettSzoLabel.setText(Main.getSzavak().get(i).getMagyar());
            }
            keresettSzoIndexe = i;
        } else {
            talalatLabel.setText("Ügyes vagy, már minden szót tudsz!");
            valaszSzoText.setText("");
            valaszSzoText.setEnabled(false);
            ellenorzoGomb2.setEnabled(false);
        }
    }

    public static void indit() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Szotanulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Szotanulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Szotanulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Szotanulo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel angolLabel;
    private javax.swing.JTextField angolText;
    private javax.swing.JButton bevitelGomb;
    private javax.swing.JButton ellenorzoGomb;
    private javax.swing.JButton ellenorzoGomb2;
    private javax.swing.JButton fajlNevGomb;
    private javax.swing.JTextField fajlNevText;
    private javax.swing.JLabel kerdezettSzoLabel;
    private javax.swing.JLabel magyarLabel;
    private javax.swing.JTextField magyarText;
    private javax.swing.JLabel talalatLabel;
    private javax.swing.JLabel tanulandoText;
    private javax.swing.JButton tanulasGomb;
    private javax.swing.JButton torlesGomb;
    private javax.swing.JLabel uresFelirat;
    private javax.swing.JTextField valaszSzoText;
    // End of variables declaration//GEN-END:variables
    private int keresettSzoIndexe;
    private boolean nyelv;

    public JLabel getTanulandoText() {
        return tanulandoText;
    }

    @Override
    public void keyTyped(KeyEvent e) {

    }

    @Override
    public void keyPressed(KeyEvent e) {

    }

    @Override
    public void keyReleased(KeyEvent e) {
        if (e.getSource() == magyarText || e.getSource() == angolText) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                if (angolText.getText().length() != 0 && magyarText.getText().length() != 0) {
                    SzoPar szopar = new SzoPar(angolText.getText().trim(), magyarText.getText().trim());
                    bevitelEllenorzes(szopar);
                    angolText.setText("");
                    magyarText.setText("");
                    Fajlkezelo.kiir();
                } else {
                    uresFelirat.setText("Töltsd ki a mezőket");
                }
            }
        }

        if (e.getSource() == valaszSzoText) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                SzoPar sz = new SzoPar();
                if (nyelv) {
                    sz.setAngol(kerdezettSzoLabel.getText());
                    sz.setMagyar(valaszSzoText.getText());
                } else {
                    sz.setAngol(valaszSzoText.getText());
                    sz.setMagyar(kerdezettSzoLabel.getText());
                }
                kerdezettSzoLabel.setText("");
                if (sz.equals(Main.getSzavak().get(keresettSzoIndexe))) {
                    talalatLabel.setForeground(Color.black);
                    talalatLabel.setText("Ezt már tudod, ügyes vagy");
                    Main.getSzavak().remove(keresettSzoIndexe);
                    ujSzotKerdez();
                } else {
                    talalatLabel.setForeground(Color.red);
                    if (nyelv) {
                        talalatLabel.setText("Ezt még gyakorolni kell, a helyes válasz: " + Main.getSzavak().get(keresettSzoIndexe).getAngol() + " - " + Main.getSzavak().get(keresettSzoIndexe).getMagyar());
                    } else {
                        talalatLabel.setText("Ezt még gyakorolni kell, a helyes válasz: " + Main.getSzavak().get(keresettSzoIndexe).getMagyar() + " - " + Main.getSzavak().get(keresettSzoIndexe).getAngol());
                    }
                    ujSzotKerdez();
                }
                valaszSzoText.setText("");
            }
        }
        if (e.getSource() == fajlNevText) {
            if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                if (fajlNevText.getText().length() != 0) {
                    Fajlkezelo.setFajlnev(fajlNevText.getText());
                    fajlNevGomb.setEnabled(false);
                    fajlNevText.setEnabled(false);
                    bevitelGomb.setEnabled(true);
                    tanulasGomb.setEnabled(true);
                    magyarText.setEnabled(true);
                    angolText.setEnabled(true);
                    Fajlkezelo.beolvas();
                }
            }
        }
        if (e.getSource() == magyarText || e.getSource() == angolText) {
            if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                if (magyarText.getText().length() != 0 && angolText.getText().length() != 0) {
                    SzoPar sz = new SzoPar(angolText.getText(), magyarText.getText());
                    for (SzoPar s : Main.getSzavak()) {
                        if (s.equals(sz)) {
                            Main.getSzavak().remove(s);
                        }
                    }
                    Fajlkezelo.kiir();
                }
            }
        }
    }
}


